<Page x:Class="SOSTeam.TravelAgency.WPF.Views.TourGuide.AddCheckpointsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SOSTeam.TravelAgency.WPF.Views.TourGuide"
      xmlns:tourGuide="clr-namespace:SOSTeam.TravelAgency.WPF.ValidationRules.TourGuide"
      mc:Ignorable="d" 
      d:DesignHeight="636" d:DesignWidth="430"
      Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
      Title="AddCheckpointsPage">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.7*"></RowDefinition>
            <RowDefinition Height="0.7*"></RowDefinition>
            <RowDefinition Height="0.7*"></RowDefinition>
            <RowDefinition Height="0.7*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
        </Grid.RowDefinitions>
        <Border Grid.Column="0" Grid.Row="3" BorderBrush="DarkGray" Margin="0,20,0,0" BorderThickness="0 2 0 0"></Border>
        <!-- Name: -->
        <Label Grid.Column="0" Grid.Row="0" Content="Name:" HorizontalAlignment="Center" VerticalAlignment="Center" 
               Margin=" 0 0 262 22"  FontSize="14"/>
        <TextBox x:Name="NameTextBox" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="25" Margin=" 0 20 0 0">
            <TextBox.Text>
                <Binding Path="Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                    <Binding.ValidationRules>
                        <tourGuide:EmptyFieldValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></tourGuide:EmptyFieldValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"></AdornedElementPlaceholder>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"></TextBlock>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>
        <!-- Type: -->
        <Label Grid.Column="0" Grid.Row="1" Content="Type:" HorizontalAlignment="Center" VerticalAlignment="Center" 
               Margin=" 0 0 269 26" FontSize="14"/>
        <ComboBox Grid.Column="0" Grid.Row="1" x:Name="TypeComboBox" HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Height="25" Margin="0,20,0,0"
                  ItemsSource="{Binding Path=CheckpointTypes}"
                  SelectedItem="{Binding Path=Type}">
            <ComboBox.Text>
                <Binding Path="Type" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                    <Binding.ValidationRules>
                        <tourGuide:EmptyFieldValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></tourGuide:EmptyFieldValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="comboBox"></AdornedElementPlaceholder>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding [0].ErrorContent}" Foreground="Red"></TextBlock>
                    </Grid>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </ComboBox>
        
        <!-- Add button -->
        <Button Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="300" Height="25" Cursor="Hand"
                BorderBrush="DarkGray" BorderThickness="1.5" FontSize="14"
                Command="{Binding AddCheckpointCommand}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Content" Value="{Binding ButtonContent}"/>
                    <Setter Property="IsEnabled" Value="False"></Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName= NameTextBox, Path=(Validation.HasError)}" Value="False"></Condition>
                                <Condition Binding="{Binding ElementName= TypeComboBox, Path=(Validation.HasError)}" Value="False"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"></Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <!-- Type: -->
        <Label Grid.Column="0" Grid.Row="3" Content="Checkpoints" HorizontalAlignment="Left" VerticalAlignment="Center" 
               Margin="15,20,0,0" FontSize="16"/>
        <Button Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center" Height="21" Width="75" BorderBrush="DarkGray" BorderThickness="1.5"
                Cursor="Hand" Content="Clear" Margin="0,20,15,0" FontSize="13" VerticalContentAlignment="Center" Command="{Binding ClearCheckpointsCommand }"></Button>
        <ListBox Grid.Row="4" x:Name="CheckpointList" HorizontalAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                 VerticalAlignment="Top" BorderBrush="Transparent" ItemsSource="{Binding CheckpointCards}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!-- Card -->
                    <Grid Height="50" Width="390">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="4" BorderBrush="DarkGray" BorderThickness="1" Background="{Binding Background}"></Border>
                            <Image Grid.Column="0" Source="/Resources/Icons/checkpoint.png"></Image>
                            <WrapPanel Grid.Column="1" Orientation="Vertical">
                                <TextBlock Text="{Binding Name}" FontSize="16" Margin="0 5 0 0"></TextBlock>
                                <TextBlock Text="{Binding Type}" Margin="0 0 0 0" FontSize="14" Foreground="#FF999999"></TextBlock>
                            </WrapPanel>
                            <!-- Edit -->
                            <Button Grid.Column="2" Background="Transparent" BorderBrush="Transparent"
                                    Command="{Binding DataContext.EditCheckpointCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding }"
                                    IsEnabled="{Binding CanEdit}">
                                <Image Source="/Resources/Icons/pencil.png"></Image>
                            </Button>
                            <!-- Delete -->
                            <Button Grid.Column="3" Background="Transparent" BorderBrush="Transparent"
                                    Command="{Binding DataContext.DeleteCheckpointCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding }"
                                    IsEnabled="{Binding CanDelete}">
                                <Image Source="/Resources/Icons/bin.png"></Image>
                            </Button>
                        </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ListBox>
    </Grid>
</Page>
